{"ast":null,"code":"import { takeLatest, call, put, all } from 'redux-saga/effects'; // listen every action of specialc type we prase in\n\nimport ShopActionTypes from './shop.types';\nimport { firestore, convertCollectionsSnapShotToMap } from '../../firebase/filrebase.util';\nimport { fetchCollectionFailure, fetchCollectionSuccess } from './shop.actions';\nexport function* fetchCollectionAsync() {\n  try {\n    const collectionRef = firestore.collection('collections'); // 从firestore里把整个collection的ref拿出来,\n\n    const Snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapShotToMap, Snapshot);\n    yield put(fetchCollectionSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionFailure(error.message));\n  } //  collectionRef\n  //     .get()\n  //     .then((Snapshot) => { // 这个是标准格式,上面那个是firebase提供的方法 m m m m\n  //       const collectionMap = convertCollectionsSnapShotToMap(Snapshot);\n  //       dispatch(fetchCollectionSuccess(collectionMap));\n  //     })\n  //     .catch((error) => dispatch(fetchCollectionFailure(error.Message)));\n\n}\nexport function* fetchCollectionStart() {\n  yield takeLatest(ShopActionTypes.FETCH_COLLECTION_START, fetchCollectionAsync);\n}\nexport function* shopSagas() {\n  yield all([call(fetchCollectionStart)]);\n}","map":{"version":3,"sources":["/Users/lihaohang/github/react-practice-app/src/redux/shop/shop.saga.js"],"names":["takeLatest","call","put","all","ShopActionTypes","firestore","convertCollectionsSnapShotToMap","fetchCollectionFailure","fetchCollectionSuccess","fetchCollectionAsync","collectionRef","collection","Snapshot","get","collectionsMap","error","message","fetchCollectionStart","FETCH_COLLECTION_START","shopSagas"],"mappings":"AAAA,SACEA,UADF,EACcC,IADd,EACoBC,GADpB,EACyBC,GADzB,QAEO,oBAFP,C,CAE6B;;AAC7B,OAAOC,eAAP,MAA4B,cAA5B;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AACA,SAASC,sBAAT,EAAiCC,sBAAjC,QAA+D,gBAA/D;AAEA,OAAO,UAAUC,oBAAV,GAAiC;AACtC,MAAI;AACF,UAAMC,aAAa,GAAGL,SAAS,CAACM,UAAV,CAAqB,aAArB,CAAtB,CADE,CACyD;;AAC3D,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMb,IAAI,CAACK,+BAAD,EAAkCM,QAAlC,CAAjC;AACA,UAAMV,GAAG,CAACM,sBAAsB,CAACM,cAAD,CAAvB,CAAT;AACD,GALD,CAKE,OAAOC,KAAP,EAAc;AACd,UAAMb,GAAG,CAACK,sBAAsB,CAACQ,KAAK,CAACC,OAAP,CAAvB,CAAT;AACD,GARqC,CAWxC;AACA;AACA;AACA;AACA;AACA;AACA;;AACC;AAED,OAAO,UAAUC,oBAAV,GAAiC;AACtC,QAAMjB,UAAU,CACdI,eAAe,CAACc,sBADF,EAEdT,oBAFc,CAAhB;AAID;AAED,OAAO,UAAUU,SAAV,GAAsB;AAC3B,QAAOhB,GAAG,CAAC,CACTF,IAAI,CAACgB,oBAAD,CADK,CAAD,CAAV;AAGD","sourcesContent":["import {\n  takeLatest, call, put, all,\n} from 'redux-saga/effects'; // listen every action of specialc type we prase in\nimport ShopActionTypes from './shop.types';\n\nimport { firestore, convertCollectionsSnapShotToMap } from '../../firebase/filrebase.util';\nimport { fetchCollectionFailure, fetchCollectionSuccess } from './shop.actions';\n\nexport function* fetchCollectionAsync() {\n  try {\n    const collectionRef = firestore.collection('collections'); // 从firestore里把整个collection的ref拿出来,\n    const Snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapShotToMap, Snapshot);\n    yield put(fetchCollectionSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionFailure(error.message));\n  }\n\n\n//  collectionRef\n//     .get()\n//     .then((Snapshot) => { // 这个是标准格式,上面那个是firebase提供的方法 m m m m\n//       const collectionMap = convertCollectionsSnapShotToMap(Snapshot);\n//       dispatch(fetchCollectionSuccess(collectionMap));\n//     })\n//     .catch((error) => dispatch(fetchCollectionFailure(error.Message)));\n}\n\nexport function* fetchCollectionStart() {\n  yield takeLatest(\n    ShopActionTypes.FETCH_COLLECTION_START,\n    fetchCollectionAsync,\n  );\n}\n\nexport function* shopSagas() {\n  yield (all([\n    call(fetchCollectionStart),\n  ]));\n}\n"]},"metadata":{},"sourceType":"module"}