{"ast":null,"code":"var _jsxFileName = \"/Users/lihaohang/github/react-practice-app/src/pages/shop/shop.component.js\";\n\n/* eslint-disable react/prefer-stateless-function */\nimport React from 'react';\nimport { Route } from 'react-router-dom'; // import { render } from 'node-sass';\n\nimport { connect } from 'react-redux';\nimport CollectionPage from '../collection/collection.page';\nimport PreviewofCollection from '../../components/collection-overview/collection-overview.component';\nimport { firestore, convertCollectionsSnapShotToMap } from '../../firebase/filrebase.util';\nimport * as CollectionsAction from '../../redux/shop/shop.actions';\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const {\n      updateCollections\n    } = this.props;\n    const collectionRef = firestore.collection('collections'); // 从firestore里把整个collection的ref拿出来,\n\n    collectionRef.onSnapshot(async Snapshot => {\n      const collectionMaped = convertCollectionsSnapShotToMap(Snapshot);\n    }); //= > this means whenever collectionSnapshot got update, or run first time this will send collection data arry to us\n  }\n\n  render() {\n    const {\n      match\n    } = this.props; // 这里的match是上一级router传下来的\n\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      component: PreviewofCollection,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: `${match.path}/:collectionID`,\n      component: CollectionPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionMap => dispatch(CollectionsAction.UpdateCollections(collectionMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/lihaohang/github/react-practice-app/src/pages/shop/shop.component.js"],"names":["React","Route","connect","CollectionPage","PreviewofCollection","firestore","convertCollectionsSnapShotToMap","CollectionsAction","ShopPage","Component","unsubscribeFromSnapshot","componentDidMount","updateCollections","props","collectionRef","collection","onSnapshot","Snapshot","collectionMaped","render","match","path","mapDispatchToProps","dispatch","collectionMap","UpdateCollections"],"mappings":";;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,KAAT,QAAsB,kBAAtB,C,CACA;;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,mBAAP,MAAgC,oEAAhC;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AACA,OAAO,KAAKC,iBAAZ,MAAmC,+BAAnC;;AAEA,MAAMC,QAAN,SAAuBR,KAAK,CAACS,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACvCC,uBADuC,GACb,IADa;AAAA;;AAGvCC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEC,MAAAA;AAAF,QAAwB,KAAKC,KAAnC;AACA,UAAMC,aAAa,GAAGT,SAAS,CAACU,UAAV,CAAqB,aAArB,CAAtB,CAFkB,CAEyC;;AAE3DD,IAAAA,aAAa,CAACE,UAAd,CAAyB,MAAOC,QAAP,IAAoB;AAC3C,YAAMC,eAAe,GAAGZ,+BAA+B,CAACW,QAAD,CAAvD;AACD,KAFD,EAJkB,CAMd;AACL;;AAEDE,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKP,KAAvB,CADO,CACuB;;AAC9B,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEO,KAAK,CAACC,IAAK,EAAjC;AAAoC,MAAA,SAAS,EAAEjB,mBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEgB,KAAK,CAACC,IAAK,gBAA3B;AAA4C,MAAA,SAAS,EAAElB,cAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD;;AApBsC;;AAuBvC,MAAMmB,kBAAkB,GAAIC,QAAD,KAAe;AACxCX,EAAAA,iBAAiB,EAAGY,aAAD,IAAmBD,QAAQ,CAAChB,iBAAiB,CAACkB,iBAAlB,CAAoCD,aAApC,CAAD;AADN,CAAf,CAA3B;;AAGA,eAAetB,OAAO,CAAC,IAAD,EAAOoB,kBAAP,CAAP,CAAkCd,QAAlC,CAAf","sourcesContent":["/* eslint-disable react/prefer-stateless-function */\nimport React from 'react';\n\nimport { Route } from 'react-router-dom';\n// import { render } from 'node-sass';\nimport { connect } from 'react-redux';\nimport CollectionPage from '../collection/collection.page';\nimport PreviewofCollection from '../../components/collection-overview/collection-overview.component';\nimport { firestore, convertCollectionsSnapShotToMap } from '../../firebase/filrebase.util';\nimport * as CollectionsAction from '../../redux/shop/shop.actions';\n\nclass ShopPage extends React.Component {\nunsubscribeFromSnapshot = null;\n\ncomponentDidMount() {\n  const { updateCollections } = this.props;\n  const collectionRef = firestore.collection('collections'); // 从firestore里把整个collection的ref拿出来,\n\n  collectionRef.onSnapshot(async (Snapshot) => {\n    const collectionMaped = convertCollectionsSnapShotToMap(Snapshot);\n  }); //= > this means whenever collectionSnapshot got update, or run first time this will send collection data arry to us\n}\n\nrender() {\n  const { match } = this.props; // 这里的match是上一级router传下来的\n  return (\n    <div className=\"shop-page\">\n      <Route exact path={`${match.path}`} component={PreviewofCollection} />\n      <Route path={`${match.path}/:collectionID`} component={CollectionPage} />\n    </div>\n  );\n}\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  updateCollections: (collectionMap) => dispatch(CollectionsAction.UpdateCollections(collectionMap)),\n});\nexport default connect(null, mapDispatchToProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}