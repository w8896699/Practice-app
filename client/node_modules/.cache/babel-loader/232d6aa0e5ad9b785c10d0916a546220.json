{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { googleSignInFailure, googleSignInSuccess, emailSignInFailure, emailSignInSuccess } from './user.action';\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/filrebase.util';\nexport function* signInWithGoogle() {\n  console.log('i am google here');\n\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapShoot = yield userRef.get();\n    yield put(googleSignInSuccess({\n      id: userSnapShoot.id,\n      ...userSnapShoot.data()\n    }));\n  } catch (error) {\n    yield put(googleSignInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  console.log('i am fking here');\n\n  try {\n    const {\n      user\n    } = auth.signInWithEmailAndPassword(email, password);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapShoot = yield userRef.get();\n    yield put(emailSignInSuccess({\n      id: userSnapShoot.id,\n      ...userSnapShoot.data()\n    }));\n  } catch (error) {\n    console.log(' i am herer');\n    yield put(emailSignInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart)], [call(onEmailSignInStart)]);\n}","map":{"version":3,"sources":["/Users/lihaohang/github/react-practice-app/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","googleSignInFailure","googleSignInSuccess","emailSignInFailure","emailSignInSuccess","auth","googleProvider","createUserProfileDocument","signInWithGoogle","console","log","user","signInWithPopup","userRef","userSnapShoot","get","id","data","error","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","userSagas"],"mappings":"AAAA,SACEA,UADF,EACcC,GADd,EACmBC,GADnB,EACwBC,IADxB,QAEO,oBAFP;AAKA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SACEC,mBADF,EACuBC,mBADvB,EAC4CC,kBAD5C,EACgEC,kBADhE,QAEO,eAFP;AAGA,SAASC,IAAT,EAAeC,cAAf,EAA+BC,yBAA/B,QAAgE,+BAAhE;AAGA,OAAO,UAAUC,gBAAV,GAA6B;AAClCC,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;;AACA,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMN,IAAI,CAACO,eAAL,CAAqBN,cAArB,CAAvB;AACA,UAAMO,OAAO,GAAG,MAAMd,IAAI,CAACQ,yBAAD,EAA4BI,IAA5B,CAA1B;AACA,UAAMG,aAAa,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA5B;AACA,UAAMlB,GAAG,CAACK,mBAAmB,CAAC;AAAEc,MAAAA,EAAE,EAAEF,aAAa,CAACE,EAApB;AAAwB,SAAGF,aAAa,CAACG,IAAd;AAA3B,KAAD,CAApB,CAAT;AACD,GALD,CAKE,OAAOC,KAAP,EAAc;AACd,UAAMrB,GAAG,CAACI,mBAAmB,CAACiB,KAAD,CAApB,CAAT;AACD;AACF;AAGD,OAAO,UAAUC,eAAV,CAA0B;AAAEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAX,CAA1B,EAA4D;AACjEb,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;;AACA,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAWN,IAAI,CAACkB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CAAjB;AACA,UAAMT,OAAO,GAAG,MAAMd,IAAI,CAACQ,yBAAD,EAA4BI,IAA5B,CAA1B;AACA,UAAMG,aAAa,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA5B;AAEA,UAAMlB,GAAG,CAACO,kBAAkB,CAAC;AAAEY,MAAAA,EAAE,EAAEF,aAAa,CAACE,EAApB;AAAwB,SAAGF,aAAa,CAACG,IAAd;AAA3B,KAAD,CAAnB,CAAT;AACD,GAND,CAME,OAAOC,KAAP,EAAc;AACdT,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACA,UAAMb,GAAG,CAACM,kBAAkB,CAACe,KAAD,CAAnB,CAAT;AACD;AACF;AAED,OAAO,UAAUM,mBAAV,GAAgC;AACrC,QAAM5B,UAAU,CAACI,eAAe,CAACyB,oBAAjB,EAAuCjB,gBAAvC,CAAhB;AACD;AAED,OAAO,UAAUkB,kBAAV,GAA+B;AACpC,QAAM9B,UAAU,CAACI,eAAe,CAAC2B,mBAAjB,EAAsCR,eAAtC,CAAhB;AACD;AAGD,OAAO,UAAUS,SAAV,GAAsB;AAC3B,QAAM9B,GAAG,CAAC,CAACC,IAAI,CAACyB,mBAAD,CAAL,CAAD,EAA8B,CAACzB,IAAI,CAAC2B,kBAAD,CAAL,CAA9B,CAAT;AACD","sourcesContent":["import {\n  takeLatest, put, all, call,\n} from 'redux-saga/effects';\n\n\nimport UserActionTypes from './user.types';\nimport {\n  googleSignInFailure, googleSignInSuccess, emailSignInFailure, emailSignInSuccess,\n} from './user.action';\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/filrebase.util';\n\n\nexport function* signInWithGoogle() {\n  console.log('i am google here');\n  try {\n    const { user } = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapShoot = yield userRef.get();\n    yield put(googleSignInSuccess({ id: userSnapShoot.id, ...userSnapShoot.data() }));\n  } catch (error) {\n    yield put(googleSignInFailure(error));\n  }\n}\n\n\nexport function* signInWithEmail({ payload: { email, password } }) {\n  console.log('i am fking here');\n  try {\n    const { user } = auth.signInWithEmailAndPassword(email, password);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapShoot = yield userRef.get();\n\n    yield put(emailSignInSuccess({ id: userSnapShoot.id, ...userSnapShoot.data() }));\n  } catch (error) {\n    console.log(' i am herer');\n    yield put(emailSignInFailure(error));\n  }\n}\n\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\n\n\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart)], [call(onEmailSignInStart)]);\n}\n"]},"metadata":{},"sourceType":"module"}