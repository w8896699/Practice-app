{"ast":null,"code":"var _jsxFileName = \"/Users/lihaohang/github/react-practice-app/src/App.js\";\nimport React, { useEffect } from 'react';\nimport './App.css';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport HomePage from './pages/homepage/homepage';\nimport ShopPage from './pages/shop/shop.component';\nimport { SignInSignUpPage } from './pages/sign-in-and-sign-up/sign-in-and-sign-up';\nimport CheckoutPage from './pages/checkout/checkout-page';\nimport Header from './components/header/header.component'; // 不能 import {Header}, otherwise mapStateToProps wont get any state from reducer\n\nimport * as userAction from './redux/user/user.action';\nimport { selectCurrentUser } from './redux/user/user.selector';\n\nconst App = ({\n  checkUserSession,\n  currentUser\n}) => {\n  useEffect(() => {\n    checkUserSession();\n  }, []); // unsubscribeFromAuth = null;\n  // componentDidMount() {\n  //   const { checkUserSession } = this.props;\n  //   checkUserSession();\n  // }\n  // 这里我曾经用的useeffect,但是用了redux之后好像就不能用了,在我用use effect的时候,有个curuser的触发条件很奇怪,明明没有设置却会被触发\n  // componentDidMount() {\n  //   const { checkUserSession } = this.props;\n  //   checkUserSession();\n  //   // onAuthStateChange is listerner, it listen to change in user login state, and run the callback whenever user sign out or sign in\n  //   this.unsubscribeFromAuth = auth.onAuthStateChanged(async (userAuth) => {\n  //     if (userAuth) { // only if user is login in (for now with google)\n  //       const userRef = await createUserProfileDocument(userAuth);\n  //       userRef.onSnapshot((snapShot) => { // get snapshot from firebase and put in our state for all\n  //         setCurrentUser({\n  //           id: snapShot.id,\n  //           ...snapShot.data(),\n  //         });\n  //       });\n  //     } else {\n  //       setCurrentUser(userAuth);// this is for set back our user to null\n  //       // addCollectionAndDocuments('collections', collections.map(({ title, items }) => ({ title, items }))); //this is just for one time use to add collection into firebase\n  //     }\n  //   });\n  // }\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, ' //Switch 只会match第一个 path, 后面再多的都不会match ', React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    component: HomePage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/shop\",\n    component: ShopPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/signin\",\n    render: () => currentUser ? React.createElement(Redirect, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }) : React.createElement(SignInSignUpPage, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/checkout\",\n    component: CheckoutPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  })));\n};\n\nconst mapStateToProps = createStructuredSelector({\n  // best practice\n  currentUser: selectCurrentUser // collections: selectCollectionForPreview,\n\n});\n\nconst mapDispatchToProps = dispatch => ({\n  checkUserSession: () => dispatch(userAction.checkUserSession())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/lihaohang/github/react-practice-app/src/App.js"],"names":["React","useEffect","Switch","Route","Redirect","connect","createStructuredSelector","HomePage","ShopPage","SignInSignUpPage","CheckoutPage","Header","userAction","selectCurrentUser","App","checkUserSession","currentUser","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,QAAxB,QAAwC,kBAAxC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AAEA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,SAASC,gBAAT,QAAiC,iDAAjC;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AAEA,OAAOC,MAAP,MAAmB,sCAAnB,C,CAA2D;;AAE3D,OAAO,KAAKC,UAAZ,MAA4B,0BAA5B;AACA,SAASC,iBAAT,QAAkC,4BAAlC;;AAGA,MAAMC,GAAG,GAAG,CAAC;AAAEC,EAAAA,gBAAF;AAAoBC,EAAAA;AAApB,CAAD,KAAuC;AACjDf,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,gBAAgB;AACjB,GAFQ,EAEN,EAFM,CAAT,CADiD,CAMjD;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,2CADH,EAEE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,GAAlB;AAAsB,IAAA,SAAS,EAAER,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,SAAS,EAAEC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIE,oBAAC,KAAD;AACE,IAAA,KAAK,MADP;AAEE,IAAA,IAAI,EAAC,SAFP;AAGE,IAAA,MAAM,EAAE,MAAOQ,WAAW,GACxB,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADwB,GAEtB,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAWE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,WAAlB;AAA8B,IAAA,SAAS,EAAEN,YAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,CAFF,CADJ;AAkBD,CArDD;;AAsDA,MAAMO,eAAe,GAAGX,wBAAwB,CAAC;AAAE;AACjDU,EAAAA,WAAW,EAAEH,iBADkC,CAE/C;;AAF+C,CAAD,CAAhD;;AAIA,MAAMK,kBAAkB,GAAIC,QAAD,KAAe;AACxCJ,EAAAA,gBAAgB,EAAE,MAAMI,QAAQ,CAACP,UAAU,CAACG,gBAAX,EAAD;AADQ,CAAf,CAA3B;;AAIA,eAAeV,OAAO,CAACY,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CJ,GAA7C,CAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport './App.css';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport HomePage from './pages/homepage/homepage';\nimport ShopPage from './pages/shop/shop.component';\nimport { SignInSignUpPage } from './pages/sign-in-and-sign-up/sign-in-and-sign-up';\nimport CheckoutPage from './pages/checkout/checkout-page';\n\nimport Header from './components/header/header.component'; // 不能 import {Header}, otherwise mapStateToProps wont get any state from reducer\n\nimport * as userAction from './redux/user/user.action';\nimport { selectCurrentUser } from './redux/user/user.selector';\n\n\nconst App = ({ checkUserSession, currentUser }) => {\n  useEffect(() => {\n    checkUserSession();\n  }, []);\n\n\n  // unsubscribeFromAuth = null;\n\n  // componentDidMount() {\n  //   const { checkUserSession } = this.props;\n  //   checkUserSession();\n  // }\n  // 这里我曾经用的useeffect,但是用了redux之后好像就不能用了,在我用use effect的时候,有个curuser的触发条件很奇怪,明明没有设置却会被触发\n\n  // componentDidMount() {\n  //   const { checkUserSession } = this.props;\n  //   checkUserSession();\n  //   // onAuthStateChange is listerner, it listen to change in user login state, and run the callback whenever user sign out or sign in\n  //   this.unsubscribeFromAuth = auth.onAuthStateChanged(async (userAuth) => {\n  //     if (userAuth) { // only if user is login in (for now with google)\n  //       const userRef = await createUserProfileDocument(userAuth);\n\n\n  //       userRef.onSnapshot((snapShot) => { // get snapshot from firebase and put in our state for all\n  //         setCurrentUser({\n  //           id: snapShot.id,\n  //           ...snapShot.data(),\n  //         });\n  //       });\n  //     } else {\n  //       setCurrentUser(userAuth);// this is for set back our user to null\n  //       // addCollectionAndDocuments('collections', collections.map(({ title, items }) => ({ title, items }))); //this is just for one time use to add collection into firebase\n  //     }\n  //   });\n  // }\n  return (\n      <div className=\"App\">\n        <Header />\n        <Switch>\n          {' //Switch 只会match第一个 path, 后面再多的都不会match '}\n          <Route exact path=\"/\" component={HomePage} />\n          <Route path=\"/shop\" component={ShopPage} />\n          <Route\n            exact\n            path=\"/signin\"\n            render={() => (currentUser ? (\n              <Redirect to=\"/\" />)\n              : <SignInSignUpPage />)}\n          />\n          <Route exact path=\"/checkout\" component={CheckoutPage} />\n        </Switch>\n      </div>\n  );\n};\nconst mapStateToProps = createStructuredSelector({ // best practice\n  currentUser: selectCurrentUser,\n  // collections: selectCollectionForPreview,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  checkUserSession: () => dispatch(userAction.checkUserSession()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}