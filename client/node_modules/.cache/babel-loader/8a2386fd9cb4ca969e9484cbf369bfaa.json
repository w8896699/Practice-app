{"ast":null,"code":"var _jsxFileName = \"/Users/lihaohang/github/react-practice-app/src/components/sign-in/sign-in.js\";\nimport React, { useState } from 'react';\nimport './sign-in.scss';\nimport { connect } from 'react-redux';\nimport { FormInput } from '../form-input/form-input.component';\nimport StyleButton from '../styled-button/styled-button.component';\nimport { signInWithGoogle, auth } from '../../firebase/filrebase.util';\nimport { googleSignInStart, googleSignInFailure } from '../../redux/user/user.action';\nexport const SignIn = googleSignInStartDispatch => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const submitSignIn = async event => {\n    event.preventDefault();\n\n    try {\n      await auth.signInWithEmailAndPassword(email, password);\n      setEmail('');\n      setPassword('');\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"sign-in\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \" Already Have An Account?\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Sign In with your email\")), React.createElement(\"form\", {\n    onSubmit: submitSignIn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    name: \"email\",\n    type: \"email\",\n    label: \"EMAIL\",\n    value: email,\n    handleChange: event => setEmail(event.target.value),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    name: \"password\",\n    type: \"password\",\n    label: \"PASSWORD\",\n    value: password,\n    handleChange: event => setPassword(event.target.value),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"buttons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(StyleButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \" Sign In \"), React.createElement(StyleButton, {\n    type: \"button\",\n    onClick: signInWithGoogle,\n    color: \"google blue\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \" Sign In with Google \"))));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStartDispatch: () => dispatch(googleSignInStart())\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["/Users/lihaohang/github/react-practice-app/src/components/sign-in/sign-in.js"],"names":["React","useState","connect","FormInput","StyleButton","signInWithGoogle","auth","googleSignInStart","googleSignInFailure","SignIn","googleSignInStartDispatch","email","setEmail","password","setPassword","submitSignIn","event","preventDefault","signInWithEmailAndPassword","error","console","target","value","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,gBAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,QAA0B,oCAA1B;AACA,OAAOC,WAAP,MAAwB,0CAAxB;AACA,SAASC,gBAAT,EAA2BC,IAA3B,QAAuC,+BAAvC;AACA,SAASC,iBAAT,EAA4BC,mBAA5B,QAAuD,8BAAvD;AAEA,OAAO,MAAMC,MAAM,GAAIC,yBAAD,IAA+B;AACnD,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACY,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMc,YAAY,GAAG,MAAOC,KAAP,IAAiB;AACpCA,IAAAA,KAAK,CAACC,cAAN;;AACA,QAAI;AACF,YAAMX,IAAI,CAACY,0BAAL,CAAgCP,KAAhC,EAAuCE,QAAvC,CAAN;AACAD,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,MAAAA,WAAW,CAAC,EAAD,CAAX;AACD,KAJD,CAIE,OAAOK,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACD;AACF,GATD;;AAUA,SACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAFF,CADF,EAOE;AAAM,IAAA,QAAQ,EAAEJ,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,KAAK,EAAC,OAHR;AAIE,IAAA,KAAK,EAAEJ,KAJT;AAKE,IAAA,YAAY,EAAGK,KAAD,IAAWJ,QAAQ,CAACI,KAAK,CAACK,MAAN,CAAaC,KAAd,CALnC;AAME,IAAA,QAAQ,MANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EASE,oBAAC,SAAD;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,KAAK,EAAC,UAHR;AAIE,IAAA,KAAK,EAAET,QAJT;AAKE,IAAA,YAAY,EAAGG,KAAD,IAAWF,WAAW,CAACE,KAAK,CAACK,MAAN,CAAaC,KAAd,CALtC;AAME,IAAA,QAAQ,MANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,EAiBE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAC,QAAlB;AAA2B,IAAA,OAAO,EAAEjB,gBAApC;AAAsD,IAAA,KAAK,EAAC,aAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAFF,CAjBF,CAPF,CADF;AAgCD,CA9CM;;AAgDP,MAAMkB,kBAAkB,GAAIC,QAAD,KAAe;AACxCd,EAAAA,yBAAyB,EAAE,MAAMc,QAAQ,CAACjB,iBAAiB,EAAlB;AADD,CAAf,CAA3B;;AAGA,eAAeL,OAAO,CAAC,IAAD,EAAOqB,kBAAP,CAAP,CAAkCd,MAAlC,CAAf","sourcesContent":["import React, { useState } from 'react';\nimport './sign-in.scss';\nimport { connect } from 'react-redux';\nimport { FormInput } from '../form-input/form-input.component';\nimport StyleButton from '../styled-button/styled-button.component';\nimport { signInWithGoogle, auth } from '../../firebase/filrebase.util';\nimport { googleSignInStart, googleSignInFailure } from '../../redux/user/user.action';\n\nexport const SignIn = (googleSignInStartDispatch) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const submitSignIn = async (event) => {\n    event.preventDefault();\n    try {\n      await auth.signInWithEmailAndPassword(email, password);\n      setEmail('');\n      setPassword('');\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return (\n    <div className=\"sign-in\">\n      <div className=\"title\">\n        <h2> Already Have An Account?</h2>\n        <span>Sign In with your email</span>\n\n      </div>\n\n      <form onSubmit={submitSignIn}>\n        <FormInput\n          name=\"email\"\n          type=\"email\"\n          label=\"EMAIL\"\n          value={email}\n          handleChange={(event) => setEmail(event.target.value)}\n          required\n        />\n        <FormInput\n          name=\"password\"\n          type=\"password\"\n          label=\"PASSWORD\"\n          value={password}\n          handleChange={(event) => setPassword(event.target.value)}\n          required\n        />\n        <div className=\"buttons\">\n          <StyleButton type=\"submit\"> Sign In </StyleButton>\n          <StyleButton type=\"button\" onClick={signInWithGoogle} color=\"google blue\"> Sign In with Google </StyleButton>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  googleSignInStartDispatch: () => dispatch(googleSignInStart()),\n});\nexport default connect(null, mapDispatchToProps)(SignIn);\n"]},"metadata":{},"sourceType":"module"}